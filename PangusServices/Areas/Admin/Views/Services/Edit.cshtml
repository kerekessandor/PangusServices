@model PangusServices.Models.Customer

@{
    ViewBag.Title = "Editare";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.HiddenFor(x => x.CarDetail.CarDetailID)
    @Html.HiddenFor(x => x.Depozitare.DepozitareID)

    //Fejlec - Datum
    <div class="row container-fluid">
        <div class="text-right col-sm-6">
            <b>FISA DE LUCRU</b>
        </div>
        <div class="form-group pull-right col-sm-2">
            @Html.TextBoxFor(x => x.Date, new { @class = "form-control text-center" })
        </div>
    </div>
    //Detalii plata
    @*<div class="panel panel-danger">
        <div class="panel panel-heading text-center">
            Mod de plata
        </div>
        <div class="row col-sm-offset-4">
            <div class="form-group col-sm-6">
                <label>Alege modalitatea de plata</label>
                @Html.DropDownListFor(x => x.Customer.PaymentMethod.PaymentMethodID, (SelectList)ViewBag.PaymentMethodID, new { @class = "form-control" })
            </div>
        </div>
    </div>*@
    //Vezetek Nev KeresztNev
    <div class="panel panel-default">
        <div class="panel panel-heading text-center">
            Detalii Client
        </div>
        <div class="row col-sm-offset-2">
            <div class="form-group col-sm-5">
                <label>Nume</label>
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-user"></span>
                    </span>
                    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group col-sm-5">
                <label>Prenume</label>
                <div class="input-group">
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-user"></span>
                    </span>
                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    //--------------------------------------------------------Vezetek Nev KeresztNev
    <div class="panel panel-default">
        <div class="panel panel-heading text-center">
            Detalii Masina
        </div>

        <div class="row container-fluid">

            <div class="form-group col-sm-4">
                <label>Nr. Inmatriculare</label>
                @Html.TextBoxFor(x => x.CarDetail.NrInmatricular, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.CarDetail.NrInmatricular)
            </div>

            <div class="form-group col-sm-4">
                <label>Marca Auto</label>
                @Html.TextBoxFor(x => x.CarDetail.MarcaAuto, new { @class = "form-control" })
            </div>

            <div class="form-group col-sm-4">
                <label>Km la Bord</label>
                @Html.TextBoxFor(x => x.CarDetail.KmRulati, new { @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="panel panel-default">
        <div class="panel panel-heading text-center">
            Detalii Anvelopa
        </div>
        <div class="row container-fluid">
            <div class="form-group col-sm-4">
                <label>Dimensiunile Anvelopei</label>
                @Html.TextBoxFor(x => x.CarDetail.DimensiuneaA, new { @class = "form-control" })
            </div>

            <div class="form-group col-sm-4">
                <label>Anvelope/Jante Montate: </label>
                <div class="btn-group-justified" data-toggle="buttons">
                    @if (Model.CarDetail.NoiRulate)
                    {
                    <label id="elso" class="pdsa-radiobutton btn btn-default active">
                        @Html.RadioButtonFor(x => x.CarDetail.NoiRulate, true) Noi
                    </label>
                    <label id="masodik" class="pdsa-radiobutton btn btn-default">
                        @Html.RadioButtonFor(x => x.CarDetail.NoiRulate, false) Rulate
                    </label>
                    }
                    else
                    {
                        <label id="elso" class="pdsa-radiobutton btn btn-default default">
                            @Html.RadioButtonFor(x => x.CarDetail.NoiRulate, true) Noi
                        </label>
                        <label id="masodik" class="pdsa-radiobutton btn btn-default active">
                            @Html.RadioButtonFor(x => x.CarDetail.NoiRulate, false) Rulate
                        </label>
                    }
                </div>
                @Html.ValidationMessageFor(x => x.CarDetail.NoiRulate)
            </div>

            <div class="form-group col-sm-4">
                <label>Janta:  </label>
                <div class="btn-group-justified" data-toggle="buttons">
                    @if (Model.CarDetail.AluminiuOtel)
                    { 
                    <label id="harmadik" class="pdsa-radiobutton btn btn-default active">
                        @Html.RadioButtonFor(x => x.CarDetail.AluminiuOtel, true) Aluminiu
                    </label>
                    <label id="negyedik" class="pdsa-radiobutton btn btn-default default">
                        @Html.RadioButtonFor(x => x.CarDetail.AluminiuOtel, false) Otel
                    </label>
                    }
                    else
                    {
                        <label id="harmadik" class="pdsa-radiobutton btn btn-default default">
                            @Html.RadioButtonFor(x => x.CarDetail.AluminiuOtel, true) Aluminiu
                        </label>
                        <label id="negyedik" class="pdsa-radiobutton btn btn-default active">
                            @Html.RadioButtonFor(x => x.CarDetail.AluminiuOtel, false) Otel
                        </label>
                    }
                </div>
                @Html.ValidationMessageFor(x => x.CarDetail.AluminiuOtel)
            </div>
               
        </div>

        <div class="row container-fluid" id="AnvelopeNoi">
            <div class="form-group col-sm-3">
                <label>Marca Anvelopa</label>
                @Html.DropDownList("AnvelopeID", null, string.Empty, new { @class = "form-control" })
            </div>

            <div class="form-group col-sm-3">
                <label>Profil Anvelopa</label>
                @Html.DropDownList("ProfilID", null, string.Empty, new { @class = "form-control" })
            </div>

            <div class="form-group col-sm-3">
                <label>Dot/Serie</label>
                @Html.TextBoxFor(x => x.CarDetail.DotSerie, new { @class = "form-control" })
            </div>

            <div class="form-group col-sm-3">
                <label>Cantitate</label>
                @Html.TextBoxFor(x => x.CarDetail.Cantitate, new { @class = "form-control" })
            </div>
        </div>
    </div>


    <div class="form-group col-sm-offset-2 row">
        <div class="col-sm-10">
            <div class="panel panel-default">
                <div class="panel-heading text-center">
                    Servicii Executate
                </div>

                <table class="table table-hover table-bordered">
                    <thead>
                        <tr>
                            <th class="col-sm-5">Servicii</th>
                            <th class="col-sm-5">Cantitate</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            IEnumerable<PangusServices.Models.CustomerService> servicii = ViewBag.servicii;
                            foreach(var item in servicii)
                            {
                                <tr>
                                    <td>@item.PangusServicii.Name</td>
                                    <td>@Html.TextBoxFor(x => item.Cantitate, new { @class="form-control"})</td>
                                </tr>
                            }
                        }
                        
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        
        
        <div id="depozitareInfo">
            <div class="panel panel-default">
                <div class="panel panel-heading text-center">
                    Depozitare
                </div>
                <div class="container-fluid">
                    <div class="row container-fluid">
                        <div class="form-group col-sm-6">
                            <div data-toggle="buttons">
                                @if (Model.Depozitare.IsDepozitare)
                                { 
                                <label class="pdsa-radiobutton btn btn-default active">
                                    @Html.RadioButtonFor(x => x.Depozitare.IsDepozitare, true) CU Depozitare
                                </label>
                                <label class="pdsa-radiobutton btn btn-default">
                                    @Html.RadioButtonFor(x => x.Depozitare.IsDepozitare, false, new { @checked = "checked" }) FARA Depozitare
                                </label>
                                }
                                else
                                {
                                    <label class="pdsa-radiobutton btn btn-default ">
                                        @Html.RadioButtonFor(x => x.Depozitare.IsDepozitare, true) CU Depozitare
                                    </label>
                                    <label class="pdsa-radiobutton btn btn-default active">
                                        @Html.RadioButtonFor(x => x.Depozitare.IsDepozitare, false, new { @checked = "checked" }) FARA Depozitare
                                    </label>
                                }
                            </div>
                        </div>
                        <div class="form-group pull-right col-sm-2">
                            @Html.TextBoxFor(x => x.Depozitare.Data, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group col-sm-3">
                        <label>Dimensiune</label>
                        @Html.TextBoxFor(x => x.Depozitare.Dimensiune, new { @class = "form-control" })
                    </div>

                    <div class="form-group col-sm-3">
                        <label>Anvelope</label>
                        @Html.DropDownListFor(x => x.Depozitare.Profil.AnvelopeID, (SelectList)ViewBag.AnvelopeID, new { @class = "form-control DepoProfil" })
                    </div>

                    <div class="form-group col-sm-3">
                        <label>Profil</label>
                        @*@Html.DropDownList("ProfilID", null, string.Empty, new { @class = "form-control", @id = "descriereProfil" })*@
                        @Html.DropDownListFor(x => x.Depozitare.ProfilID, (SelectList)ViewBag.ProfilID, new { @class = "form-control DepoProfil" })
                    </div>

                    <div class="form-group col-sm-3">
                        <label>Cantitate</label>
                        @Html.TextBoxFor(x => x.Depozitare.Cantitate, new { @class = "form-control" })
                    </div>

                    <div class="form-group col-sm-12">
                        <label>Descriere</label>
                        @Html.TextAreaFor(x => x.Depozitare.Descriere, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>

        <div id="info">
            <div class="panel panel-default">
                <div class="panel panel-heading text-center">
                    Informatii Suplimentare
                </div>
                <div class="row container-fluid">
                    <div class="form-group col-sm-6">
                        <label>Email</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-envelope"></span>
                            </span>
                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @id = "email", type = "email" })
                        </div>
                    </div>

                    <div class="form-group col-sm-6">
                        <label>Nr. Mobil</label>
                        <div class="input-group">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-earphone"></span>
                            </span>
                            @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="btn-group">
            <input type="submit" value="Salvare" class="btn btn-primary" id="submitBtn" />
            <a href="@Url.Action("Index")" class="btn btn-default">Inapoi</a>
        </div>
}



@section Scripts{
    <script>
        $(document).ready(function () {
  
        //Dropdownlist Selectedchange event
        $("#AnvelopeID").change(function () {
            $("#ProfilID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.RouteUrl("SelectProfils")',
                            dataType: 'json',
                            data: { id: $("#AnvelopeID").val() },
                            success: function (profils) {
                                $.each(profils, function (i, profil) {
                                    $("#ProfilID").append('<option value="'
                                        + profil.ProfilID + '">'
                                        + profil.Name + '</option>');
                                });
                            },
                            error: function (ex) {
                                alert('Failed to retrieve states.' + ex.responseText);
                            }
                        });
                        return false;
                    })

                    $(".DepoAnvelope").change(function () {
                        $(".DepoProfil").empty();
                        $.ajax({
                            type: 'POST',
                            url: '@Url.RouteUrl("SelectProfils")',
                            dataType: 'json',
                            data: { id: $(".DepoAnvelope").val() },
                            success: function (profils) {
                                $.each(profils, function (i, profil) {
                                    $(".DepoProfil").append('<option value="'
                                        + profil.ProfilID + '">'
                                        + profil.Name + '</option>');
                                });
                            },
                            error: function (ex) {
                                alert('Failed to retrieve states.' + ex.responseText);
                            }
                        });
                        return false;
                    })

                });
    </script>
}


